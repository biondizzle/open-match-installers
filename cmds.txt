# create the namespace
kubectl create namespace open-match

# Installs the cluster
rm install.yaml
wget https://raw.githubusercontent.com/biondizzle/open-match-installers/master/install.yaml
kubectl apply --namespace open-match -f install.yaml

# Installs the cluster... 01
rm 01-open-match-core.yaml
wget https://raw.githubusercontent.com/biondizzle/open-match-installers/master/01-open-match-core.yaml
kubectl apply --namespace open-match -f 01-open-match-core.yaml

/* DO NOT USE
# Installs OPEN MATCH DEMO!!
rm 02-open-match-demo.yaml
wget https://raw.githubusercontent.com/biondizzle/open-match-installers/master/02-open-match-demo.yaml
kubectl create namespace open-match-demo
kubectl apply --namespace open-match-demo -f 02-open-match-demo.yaml
*/ DO NOT USE

# Installs the cluster... 03
rm 03-prometheus-chart.yaml
wget https://raw.githubusercontent.com/biondizzle/open-match-installers/master/03-prometheus-chart.yaml
kubectl apply --namespace open-match -f 03-prometheus-chart.yaml

# Installs the cluster... 04
rm 04-grafana-chart.yaml
wget https://raw.githubusercontent.com/biondizzle/open-match-installers/master/04-grafana-chart.yaml
kubectl apply --namespace open-match -f 04-grafana-chart.yaml

# Installs the cluster... 05
rm 05-jaeger-chart.yaml
wget https://raw.githubusercontent.com/biondizzle/open-match-installers/master/05-jaeger-chart.yaml
kubectl apply --namespace open-match -f 05-jaeger-chart.yaml

# Imports default config
rm 06-open-match-override-configmap.yaml
wget https://raw.githubusercontent.com/biondizzle/open-match-installers/master/06-open-match-override-configmap.yaml
kubectl apply --namespace open-match -f 06-open-match-override-configmap.yaml

# Imports default evaluator
rm 07-open-match-default-evaluator.yaml
wget https://raw.githubusercontent.com/biondizzle/open-match-installers/master/07-open-match-default-evaluator.yaml
kubectl apply --namespace open-match -f 07-open-match-default-evaluator.yaml

# Installs a demo
rm 02-open-match-demo.yaml
wget https://raw.githubusercontent.com/biondizzle/open-match-installers/master/02-open-match-demo.yaml
kubectl create namespace open-match-demo
kubectl apply --namespace open-match-demo -f 02-open-match-demo.yaml

# Access to the demo
kubectl port-forward --address 207.246.124.28 --namespace open-match-demo service/om-demo 51507:51507

# Delete The Demo
kubectl delete namespace open-match-demo

# Delete Open Match and Configs
kubectl delete psp,clusterrole,clusterrolebinding --selector=release=open-match
kubectl delete namespace open-match

# Create the Tutorial
kubectl create namespace mm101-tutorial

# Build the Frontend image.
sudo docker build -t mikebiondi/mm101-tutorial-frontend frontend/

# Push the Frontend image to the configured Registry.
sudo docker push mikebiondi/mm101-tutorial-frontend

# Build the Director image.
sudo docker build -t mikebiondi/mm101-tutorial-director director/

# Push the Director image to the configured Registry.
sudo docker push mikebiondi/mm101-tutorial-director

# Build the MatchFunction image.
sudo docker build -t mikebiondi/mm101-tutorial-matchfunction matchfunction/

# Push the MatchFunction image to the configured Registry.
sudo docker push mikebiondi/mm101-tutorial-matchfunction

# Deploy and run
sed "s|REGISTRY_PLACEHOLDER|mikebiondi|g" matchmaker.yaml | kubectl apply -f -

# Delete Tutorial
kubectl delete namespace mm101-tutorial

# Install facade pod
kubectl create namespace open-match-facade
rm facade-pod.yaml
#wget --no-check-certificate --no-cache --no-cookies https://raw.githubusercontent.com/biondizzle/open-match-installers/master/facade-pod.yaml
wget --no-check-certificate --no-cache --no-cookies http://cone.cloud/transfer/facade-pod.yaml
kubectl apply --namespace open-match-facade -f facade-pod.yaml

# Expose facade
/** NO LONGER NEEDED!!
kubectl expose deployment om-facade --type=LoadBalancer --target-port=8990 --name=om-facade-service --namespace open-match-facade --
kubectl patch svc om-facade-service -n open-match-facade -p '{"spec": {"ports": [{"port": 8990, "targetPort": 8990, "nodePort" : 32424}], "type": "LoadBalancer", "externalIPs":["207.246.124.28"]}}'
**/

# View and test facade pod
kubectl get pod -o wide -n open-match-facade
kubectl get services -n open-match-facade
kubectl describe svc om-facade --namespace open-match-facade
kubectl get ep om-facade --namespace open-match-facade
kubectl get ingress om-facade-service-ingress -n open-match-facade
kubectl describe pod om-facade -n open-match-facade
curl -i -H "Accept: application/json" -H "Content-Type: application/json" -X GET http://192.168.207.163:8990/om-facade

#delete facade
kubectl delete namespace open-match-facade


# Expose facade pod
kubectl expose pod om-facade --namespace open-match-facade --type=NodePort --name=om-facade-service
kubectl expose rc nginx --port=80 --target-port=8000


kubectl get svc om-facade --namespace open-match-facade -o yaml | grep nodePort -C 5

kubectl create namespace mm102-tutorial

docker build -t mikebiondi/mm102-tutorial-frontend frontend/
docker push mikebiondi/mm102-tutorial-frontend
docker build -t mikebiondi/mm102-tutorial-director director/
docker push mikebiondi/mm102-tutorial-director
docker build -t mikebiondi/mm102-tutorial-matchfunction matchfunction/
docker push mikebiondi/mm102-tutorial-matchfunction

wget --no-check-certificate --no-cache --no-cookies http://cone.cloud/transfer/matchmaker.yaml
kubectl apply -f matchmaker.yaml

kubectl get pods -n mm102-tutorial
kubectl get pod -o wide -n mm102-tutorial

kubectl delete namespace mm102-tutorial

